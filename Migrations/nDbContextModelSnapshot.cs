// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAdmin.Data;

namespace WebAdmin.Migrations
{
    [DbContext(typeof(nDbContext))]
    partial class nDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebAdmin.Models.CatArea", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdEmpresaNavigationIdEmpresaNavigationIdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.HasKey("IdArea");

                    b.HasIndex("IdEmpresaNavigationIdEmpresaNavigationIdEmpresa");

                    b.ToTable("CatAreas");
                });

            modelBuilder.Entity("WebAdmin.Models.CatCategoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoriaDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.ToTable("CatCategorias");
                });

            modelBuilder.Entity("WebAdmin.Models.CatCodigosPostal", b =>
                {
                    b.Property<int>("IdCodigosPostales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCodigosPostales")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ccp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CcveCiudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cestado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cmnpio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coficina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CtipoAsenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dasenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dcodigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dcp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dmnpio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtipoAsenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dzona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdAsentaCpcons")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCodigosPostales");

                    b.ToTable("CatCodigosPostales");
                });

            modelBuilder.Entity("WebAdmin.Models.CatEstatus", b =>
                {
                    b.Property<int>("IdEstatusRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstatusDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.HasKey("IdEstatusRegistro");

                    b.ToTable("CatEstatus");
                });

            modelBuilder.Entity("WebAdmin.Models.CatGenero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("GeneroDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.HasKey("IdGenero");

                    b.ToTable("CatGeneros");
                });

            modelBuilder.Entity("WebAdmin.Models.CatPerfil", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("PerfilDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPerfil");

                    b.ToTable("CatPerfiles");
                });

            modelBuilder.Entity("WebAdmin.Models.CatProducto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadMinima")
                        .HasColumnType("int");

                    b.Property<int?>("CatCategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("CodigoExterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DescProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<decimal>("PorcentajePrecioUno")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductoPrecioUno")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubCosto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProducto");

                    b.HasIndex("CatCategoriaIdCategoria");

                    b.ToTable("CatProductos");
                });

            modelBuilder.Entity("WebAdmin.Models.CatRole", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("RolDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("CatRoles");
                });

            modelBuilder.Entity("WebAdmin.Models.CatTipoCentro", b =>
                {
                    b.Property<int>("IdTipoCentro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("TipoCentroDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoCentro");

                    b.ToTable("CatTipoCentros");
                });

            modelBuilder.Entity("WebAdmin.Models.CatTipoDireccion", b =>
                {
                    b.Property<int>("IdTipoDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("TipoDireccionDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDireccion");

                    b.ToTable("CatTipoDirecciones");
                });

            modelBuilder.Entity("WebAdmin.Models.FileOnDatabaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilesOnDatabase");
                });

            modelBuilder.Entity("WebAdmin.Models.FileOnFileSystemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FilesOnFileSystem");
                });

            modelBuilder.Entity("WebAdmin.Models.TblCentro", b =>
                {
                    b.Property<Guid>("IdCentro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatTipoCentroIdTipoCentro")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("IdColonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("IdTipoCentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTipoLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalidadMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCentro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCentro");

                    b.HasIndex("CatTipoCentroIdTipoCentro");

                    b.ToTable("TblCentros");
                });

            modelBuilder.Entity("WebAdmin.Models.TblCliente", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("GiroComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("TblClientes");
                });

            modelBuilder.Entity("WebAdmin.Models.TblClienteContacto", b =>
                {
                    b.Property<int>("IdClienteContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<string>("NombreClienteContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TblClienteIdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClienteContacto");

                    b.HasIndex("TblClienteIdCliente");

                    b.ToTable("TblClienteContactos");
                });

            modelBuilder.Entity("WebAdmin.Models.TblClienteDireccion", b =>
                {
                    b.Property<int>("IdClienteDirecciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatTipoDireccionIdTipoDireccion")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdColonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDireccion")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TblClienteIdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClienteDirecciones");

                    b.HasIndex("CatTipoDireccionIdTipoDireccion");

                    b.HasIndex("TblClienteIdCliente");

                    b.ToTable("TblClienteDirecciones");
                });

            modelBuilder.Entity("WebAdmin.Models.TblEmpresa", b =>
                {
                    b.Property<Guid>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatEstatusIdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha Registro");

                    b.Property<string>("GiroComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdColonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.HasIndex("CatEstatusIdEstatusRegistro");

                    b.ToTable("TblEmpresa");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedor", b =>
                {
                    b.Property<Guid>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("GiroComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.ToTable("TblProveedores");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedorContacto", b =>
                {
                    b.Property<int>("IdProveedorContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<Guid>("IdProveedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NombreProveedorContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TblProveedorIdProveedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedorContacto");

                    b.HasIndex("TblProveedorIdProveedor");

                    b.ToTable("TblProveedorContactos");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedorDireccion", b =>
                {
                    b.Property<int>("IdProveedorDirecciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<string>("IdColonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<Guid>("IdProveedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdTipoDireccion")
                        .HasColumnType("int");

                    b.Property<string>("LocalidadMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TblProveedorIdProveedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedorDirecciones");

                    b.HasIndex("TblProveedorIdProveedor");

                    b.ToTable("TblProveedorDirecciones");
                });

            modelBuilder.Entity("WebAdmin.Models.TblUsuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CatAreaIdArea")
                        .HasColumnType("int");

                    b.Property<int?>("CatGeneroIdGenero")
                        .HasColumnType("int");

                    b.Property<int?>("CatPerfilIdPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("CatRoleIdRol")
                        .HasColumnType("int");

                    b.Property<string>("CorreoAcceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha de Nacimiento");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("Fecha Registro");

                    b.Property<int>("IdArea")
                        .HasColumnType("int");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdEstatusRegistro")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CatAreaIdArea");

                    b.HasIndex("CatGeneroIdGenero");

                    b.HasIndex("CatPerfilIdPerfil");

                    b.HasIndex("CatRoleIdRol");

                    b.ToTable("TblUsuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAdmin.Models.CatArea", b =>
                {
                    b.HasOne("WebAdmin.Models.TblEmpresa", "IdEmpresaNavigationIdEmpresaNavigation")
                        .WithMany()
                        .HasForeignKey("IdEmpresaNavigationIdEmpresaNavigationIdEmpresa");

                    b.Navigation("IdEmpresaNavigationIdEmpresaNavigation");
                });

            modelBuilder.Entity("WebAdmin.Models.CatProducto", b =>
                {
                    b.HasOne("WebAdmin.Models.CatCategoria", null)
                        .WithMany("CatProductos")
                        .HasForeignKey("CatCategoriaIdCategoria");
                });

            modelBuilder.Entity("WebAdmin.Models.TblCentro", b =>
                {
                    b.HasOne("WebAdmin.Models.CatTipoCentro", null)
                        .WithMany("TblCentros")
                        .HasForeignKey("CatTipoCentroIdTipoCentro");
                });

            modelBuilder.Entity("WebAdmin.Models.TblClienteContacto", b =>
                {
                    b.HasOne("WebAdmin.Models.TblCliente", null)
                        .WithMany("TblClienteContactos")
                        .HasForeignKey("TblClienteIdCliente");
                });

            modelBuilder.Entity("WebAdmin.Models.TblClienteDireccion", b =>
                {
                    b.HasOne("WebAdmin.Models.CatTipoDireccion", null)
                        .WithMany("TblClienteDireccion")
                        .HasForeignKey("CatTipoDireccionIdTipoDireccion");

                    b.HasOne("WebAdmin.Models.TblCliente", null)
                        .WithMany("TblClienteDireccion")
                        .HasForeignKey("TblClienteIdCliente");
                });

            modelBuilder.Entity("WebAdmin.Models.TblEmpresa", b =>
                {
                    b.HasOne("WebAdmin.Models.CatEstatus", null)
                        .WithMany("TblEmpresas")
                        .HasForeignKey("CatEstatusIdEstatusRegistro");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedorContacto", b =>
                {
                    b.HasOne("WebAdmin.Models.TblProveedor", null)
                        .WithMany("TblProveedorContactos")
                        .HasForeignKey("TblProveedorIdProveedor");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedorDireccion", b =>
                {
                    b.HasOne("WebAdmin.Models.TblProveedor", null)
                        .WithMany("TblProveedorDireccion")
                        .HasForeignKey("TblProveedorIdProveedor");
                });

            modelBuilder.Entity("WebAdmin.Models.TblUsuario", b =>
                {
                    b.HasOne("WebAdmin.Models.CatArea", null)
                        .WithMany("TblUsuarios")
                        .HasForeignKey("CatAreaIdArea");

                    b.HasOne("WebAdmin.Models.CatGenero", null)
                        .WithMany("TblUsuarios")
                        .HasForeignKey("CatGeneroIdGenero");

                    b.HasOne("WebAdmin.Models.CatPerfil", null)
                        .WithMany("TblUsuarios")
                        .HasForeignKey("CatPerfilIdPerfil");

                    b.HasOne("WebAdmin.Models.CatRole", null)
                        .WithMany("TblUsuarios")
                        .HasForeignKey("CatRoleIdRol");
                });

            modelBuilder.Entity("WebAdmin.Models.CatArea", b =>
                {
                    b.Navigation("TblUsuarios");
                });

            modelBuilder.Entity("WebAdmin.Models.CatCategoria", b =>
                {
                    b.Navigation("CatProductos");
                });

            modelBuilder.Entity("WebAdmin.Models.CatEstatus", b =>
                {
                    b.Navigation("TblEmpresas");
                });

            modelBuilder.Entity("WebAdmin.Models.CatGenero", b =>
                {
                    b.Navigation("TblUsuarios");
                });

            modelBuilder.Entity("WebAdmin.Models.CatPerfil", b =>
                {
                    b.Navigation("TblUsuarios");
                });

            modelBuilder.Entity("WebAdmin.Models.CatRole", b =>
                {
                    b.Navigation("TblUsuarios");
                });

            modelBuilder.Entity("WebAdmin.Models.CatTipoCentro", b =>
                {
                    b.Navigation("TblCentros");
                });

            modelBuilder.Entity("WebAdmin.Models.CatTipoDireccion", b =>
                {
                    b.Navigation("TblClienteDireccion");
                });

            modelBuilder.Entity("WebAdmin.Models.TblCliente", b =>
                {
                    b.Navigation("TblClienteContactos");

                    b.Navigation("TblClienteDireccion");
                });

            modelBuilder.Entity("WebAdmin.Models.TblProveedor", b =>
                {
                    b.Navigation("TblProveedorContactos");

                    b.Navigation("TblProveedorDireccion");
                });
#pragma warning restore 612, 618
        }
    }
}
